{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/GaneshSurna/Desktop/react-redux/advanced-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/GaneshSurna/Desktop/react-redux/advanced-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nvar cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart: function replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart: function addItemToCart(state, action) {\n      var newItem = action.payload;\n      var existingItem = state.items.find(function (item) {\n        return item.id === newItem.id;\n      });\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart: function removeItemFromCart(state, action) {\n      var id = action.payload;\n      var existingItem = state.items.find(function (item) {\n        return item.id === id;\n      });\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(function (item) {\n          return item.id !== id;\n        });\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport var sendCartDataCustomActionCreator = function sendCartDataCustomActionCreator(cart) {\n  var sendCartData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(uiActions.showNotification({\n              status: 'pending',\n              title: 'Sending...',\n              message: 'Sending cart data!'\n            }));\n            fetch('https://food-app-a6f82-default-rtdb.firebaseio.com/cart.json', {\n              method: 'PUT',\n              body: JSON.stringify(cart)\n            }).then(function () {\n              dispatch(uiActions.showNotification({\n                status: 'success',\n                title: 'Success!',\n                message: 'Sent cart data successfully!'\n              }));\n            }).catch(function (error) {\n              dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Sending cart data failed!'\n              }));\n            });\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function sendCartData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return sendCartData();\n          case 3:\n            _context2.next = 7;\n            break;\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n          case 7:\n            ;\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\n// return async (dispatch)=>{\n//     dispatch(\n//         uiActions.showNotification({\n//           status: 'pending',\n//           title: 'Sending...',\n//           message: 'Sending cart data!',\n//         })\n//     );\n\n//     const sendHttpRequest=async()=>{\n//         const response = await fetch(\n//             'https://food-app-a6f82-default-rtdb.firebaseio.com/cart.json',\n//             {\n//                 method: 'PUT',\n//                 body: JSON.stringify(cart),\n//             }\n//         );\n\n//         if (!response.ok) {\n//             throw new Error('Sending cart data failed.');\n//         }\n//     };\n\n//     try{\n//         await sendHttpRequest();\n//         dispatch(\n//             uiActions.showNotification({\n//                 status: 'success',\n//                 title: 'Success!',\n//                 message: 'Sent cart data successfully!',\n//             })\n//         );\n//     }\n//     catch(error){\n//         dispatch(\n//             uiActions.showNotification({\n//                 status: 'error',\n//                 title: 'Error!',\n//                 message: 'Sending cart data failed!',\n//             })\n//         );\n//     }\n// }\n// }\n\nexport var cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartDataCustomActionCreator","cart","sendCartData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","dispatch","showNotification","status","message","fetch","method","body","JSON","stringify","then","catch","error","stop","apply","arguments","_ref2","_callee2","_callee2$","_context2","t0","_x","cartActions","actions"],"sources":["C:/Users/GaneshSurna/Desktop/react-redux/advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { uiActions } from './ui-slice';\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendCartDataCustomActionCreator=(cart)=>{\r\n\r\n    const sendCartData=async ()=>{\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'pending',\r\n                title: 'Sending...',\r\n                message: 'Sending cart data!',\r\n            })\r\n        );\r\n\r\n        fetch(\r\n            'https://food-app-a6f82-default-rtdb.firebaseio.com/cart.json',\r\n            {\r\n                method: 'PUT',\r\n                body: JSON.stringify(cart),\r\n            }\r\n        ).then(()=>{\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'success',\r\n                    title: 'Success!',\r\n                    message: 'Sent cart data successfully!',\r\n                })\r\n            );\r\n        }).catch((error)=>{\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'error',\r\n                    title: 'Error!',\r\n                    message: 'Sending cart data failed!',\r\n                })\r\n            );\r\n        })\r\n    };\r\n\r\n    return async (dispatch)=>{\r\n        try{\r\n            await sendCartData();\r\n            \r\n        } \r\n        catch(error){\r\n            \r\n        };\r\n    }\r\n}\r\n\r\n    // return async (dispatch)=>{\r\n    //     dispatch(\r\n    //         uiActions.showNotification({\r\n    //           status: 'pending',\r\n    //           title: 'Sending...',\r\n    //           message: 'Sending cart data!',\r\n    //         })\r\n    //     );\r\n\r\n    //     const sendHttpRequest=async()=>{\r\n    //         const response = await fetch(\r\n    //             'https://food-app-a6f82-default-rtdb.firebaseio.com/cart.json',\r\n    //             {\r\n    //                 method: 'PUT',\r\n    //                 body: JSON.stringify(cart),\r\n    //             }\r\n    //         );\r\n    \r\n    //         if (!response.ok) {\r\n    //             throw new Error('Sending cart data failed.');\r\n    //         }\r\n    //     };\r\n\r\n    //     try{\r\n    //         await sendHttpRequest();\r\n    //         dispatch(\r\n    //             uiActions.showNotification({\r\n    //                 status: 'success',\r\n    //                 title: 'Success!',\r\n    //                 message: 'Sent cart data successfully!',\r\n    //             })\r\n    //         );\r\n    //     }\r\n    //     catch(error){\r\n    //         dispatch(\r\n    //             uiActions.showNotification({\r\n    //                 status: 'error',\r\n    //                 title: 'Error!',\r\n    //                 message: 'Sending cart data failed!',\r\n    //             })\r\n    //         );\r\n    //     }\r\n    // }\r\n// }\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}