{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    isChanged: false\n  },\n  reducers: {\n    replaceCart: function replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart: function addItemToCart(state, action) {\n      var newItem = action.payload;\n      var existingItem = state.items.find(function (item) {\n        return item.id === newItem.id;\n      });\n      state.totalQuantity++;\n      state.isChanged = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart: function removeItemFromCart(state, action) {\n      var id = action.payload;\n      var existingItem = state.items.find(function (item) {\n        return item.id === id;\n      });\n      state.totalQuantity--;\n      state.isChanged = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(function (item) {\n          return item.id !== id;\n        });\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n});\nexport var cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","isChanged","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["C:/Users/GaneshSurna/Desktop/react-redux/advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    isChanged:false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.isChanged=true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.isChanged=true;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice-=existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,SAAS,EAAC;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,WAAAA,YAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACC,OAAO,CAACN,aAAa;MAClDI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACpC,CAAC;IACDQ,aAAa,WAAAA,cAACH,KAAK,EAAEC,MAAM,EAAE;MAC3B,IAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,IAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE;MAAA,EAAC;MACvER,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,SAAS,GAAC,IAAI;MACpB,IAAI,CAACQ,YAAY,EAAE;QACjBL,KAAK,CAACL,KAAK,CAACc,IAAI,CAAC;UACfD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBjB,IAAI,EAAEW,OAAO,CAACS;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACnE;IACF,CAAC;IACDI,kBAAkB,WAAAA,mBAACd,KAAK,EAAEC,MAAM,EAAE;MAChC,IAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,IAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE;MAAA,EAAC;MAC/DR,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,SAAS,GAAC,IAAI;MACpB,IAAIQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BX,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAAC,UAACR,IAAI;UAAA,OAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE;QAAA,EAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,IAAEP,YAAY,CAACK,KAAK;MAC7C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,IAAMM,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAE5C,eAAezB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}