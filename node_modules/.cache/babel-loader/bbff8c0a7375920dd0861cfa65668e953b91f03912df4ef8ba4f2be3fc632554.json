{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nvar cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addCart: function addCart(state, action) {\n      var newItem = action.payload;\n      var existingItem = state.items.find(function (item) {\n        return item.id === newItem.id;\n      });\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n      state.totalQuantity++;\n    },\n    removeCart: function removeCart(state, action) {}\n  }\n});\nexport var cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","cartSlice","name","initialState","reducers","addCart","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","totalPrice","removeCart","cartActions","actions","reducer"],"sources":["C:/Users/GaneshSurna/Desktop/react-redux/advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState={items:[], totalQuantity:0};\r\n\r\nconst cartSlice=createSlice({\r\n    name:\"cart\",\r\n    initialState:initialCartState,\r\n    reducers:{\r\n        addCart(state, action){\r\n            const newItem=action.payload;\r\n            const existingItem=state.items.find((item)=>{\r\n                return item.id===newItem.id;\r\n            });\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id:newItem.id,\r\n                    title:newItem.title,\r\n                    price:newItem.price,\r\n                    quantity:1,\r\n                    totalPrice:newItem.price,\r\n                });\r\n            }\r\n            else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice+=newItem.price;\r\n            }\r\n            state.totalQuantity++;\r\n        },\r\n        removeCart(state, action){\r\n\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartActions=cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,gBAAgB,GAAC;EAACC,KAAK,EAAC,EAAE;EAAEC,aAAa,EAAC;AAAC,CAAC;AAElD,IAAMC,SAAS,GAACJ,WAAW,CAAC;EACxBK,IAAI,EAAC,MAAM;EACXC,YAAY,EAACL,gBAAgB;EAC7BM,QAAQ,EAAC;IACLC,OAAO,WAAAA,QAACC,KAAK,EAAEC,MAAM,EAAC;MAClB,IAAMC,OAAO,GAACD,MAAM,CAACE,OAAO;MAC5B,IAAMC,YAAY,GAACJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAC,UAACC,IAAI,EAAG;QACxC,OAAOA,IAAI,CAACC,EAAE,KAAGL,OAAO,CAACK,EAAE;MAC/B,CAAC,CAAC;MACF,IAAG,CAACH,YAAY,EAAC;QACbJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACbD,EAAE,EAACL,OAAO,CAACK,EAAE;UACbE,KAAK,EAACP,OAAO,CAACO,KAAK;UACnBC,KAAK,EAACR,OAAO,CAACQ,KAAK;UACnBC,QAAQ,EAAC,CAAC;UACVC,UAAU,EAACV,OAAO,CAACQ;QACvB,CAAC,CAAC;MACN,CAAC,MACG;QACAN,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,IAAEV,OAAO,CAACQ,KAAK;MAC1C;MACAV,KAAK,CAACN,aAAa,EAAE;IACzB,CAAC;IACDmB,UAAU,WAAAA,WAACb,KAAK,EAAEC,MAAM,EAAC,CAEzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,IAAMa,WAAW,GAACnB,SAAS,CAACoB,OAAO;AAE1C,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}